<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>halo-starter</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <name>halo-stater</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.root.basedir>${project.basedir}</project.root.basedir>
        <java.version>21</java.version>
        <lombok.version>1.18.32</lombok.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <flyway.version>10.18.1</flyway.version>
        <h2.version>2.2.224</h2.version>
        <jimmer.version>0.8.150</jimmer.version>
        <spotless.version>2.44.0.BETA2</spotless.version>
        <sentinel.version>1.8.8</sentinel.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>3.3.4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.11.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>5.8.32</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>3.0.0</version>
            </dependency>

            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>2.0.1</version>
            </dependency>

            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>4.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.16</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-annotation-aspectj</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-core</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-api-rest</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-adapter-rest</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-core-model</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-core-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-core-gateway</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-infra-persistent</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-infra-message</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-external-weather</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>halo-starter-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>8.3.0</version>
            </dependency>

            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>5.1.0</version>
            </dependency>


            <dependency>
                <groupId>org.babyfish.jimmer</groupId>
                <artifactId>jimmer-spring-boot-starter</artifactId>
                <version>${jimmer.version}</version>
            </dependency>

<!--            <dependency>-->
<!--                <groupId>org.mybatis</groupId>-->
<!--                <artifactId>mybatis</artifactId>-->
<!--                <version>3.5.16</version>-->
<!--            </dependency>-->

<!--            <dependency>-->
<!--                <groupId>com.baomidou</groupId>-->
<!--                <artifactId>mybatis-plus-spring-boot3-starter</artifactId>-->
<!--                <version>3.5.6</version>-->
<!--            </dependency>-->

<!--            <dependency>-->
<!--                <groupId>com.github.pagehelper</groupId>-->
<!--                <artifactId>pagehelper-spring-boot-starter</artifactId>-->
<!--                <version>2.1.0</version>-->
<!--            </dependency>-->

            <!-- 解藕JSON实现类，类似slf4j -->
            <dependency>
                <groupId>cn.zhxu</groupId>
                <artifactId>xjsonkit-api</artifactId>
                <version>1.5.0</version>
            </dependency>

            <!-- xjsonkit的实现类，默认使用jackson -->
            <dependency>
                <groupId>cn.zhxu</groupId>
                <artifactId>xjsonkit-jackson</artifactId>
                <version>1.5.0</version>
            </dependency>
            <dependency>
                <groupId>cn.zhxu</groupId>
                <artifactId>xjsonkit-jackson-yaml</artifactId>
                <version>1.5.0</version>
            </dependency>


            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.babyfish.jimmer</groupId>
                                <artifactId>jimmer-apt</artifactId>
                                <version>${jimmer.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless.version}</version>
                    <configuration>
                        <!-- optional: limit format enforcement to just the files changed by this feature branch -->
                        <ratchetFrom>origin/main</ratchetFrom>
                        <formats>
                            <!-- you can define as many formats as you want, each is independent -->
                            <format>
                                <!-- define the files to apply to -->
                                <includes>
                                    <include>.gitattributes</include>
                                    <include>.gitignore</include>
                                </includes>
                                <!-- define the steps to apply to those files -->
                                <trimTrailingWhitespace/>
                                <endWithNewline/>
                                <indent>
                                    <tabs>true</tabs>
                                    <spacesPerTab>4</spacesPerTab>
                                </indent>
                            </format>
                        </formats>
                        <!-- define a language-specific format -->
                        <java>
                            <!-- no need to specify files, inferred automatically, but you can if you want -->

                            <!-- apply a specific flavor of google-java-format and reflow long strings -->
                            <googleJavaFormat>
                                <version>1.8</version>
                                <style>AOSP</style>
                                <reflowLongStrings>true</reflowLongStrings>
                                <formatJavadoc>false</formatJavadoc>
                            </googleJavaFormat>

                            <!-- make sure every file has the following copyright header.
                              optionally, Spotless can set copyright years by digging
                              through git history (see "license" section below) -->
                            <licenseHeader>
                                <content>/* (C)$YEAR */</content>  <!-- or <file>${project.basedir}/license-header</file> -->
                            </licenseHeader>
                        </java>
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <goals>-->
<!--                                    <goal>check</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.rudikershaw.gitbuildhook</groupId>
                <artifactId>git-build-hook-maven-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                    <gitConfig>
                        <!-- The location of the directory you are using to store the Git hooks in your project. -->
                        <core.hooksPath>.halo/git-hooks/</core.hooksPath>
                        <!-- Some other project specific git config that you want to set. -->
                        <custom.configuration>true</custom.configuration>
                    </gitConfig>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- Sets git config specified under configuration > gitConfig. -->
                            <goal>configure</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.25.0</version>
                <configuration>
                    <targetJdk>21</targetJdk>
                    <rulesets>
                        <ruleset>.halo/pmd-check-rules/main/resources/pmd-ruleset.xml</ruleset>
                    </rulesets>
                    <format>html</format>
                    <failOnViolation>true</failOnViolation>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.25.0</version>
                <configuration>
                    <rulesets>
                        <ruleset>.halo/pmd-check-rules/main/resources/pmd-ruleset.xml</ruleset>
                    </rulesets>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>pmd</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <modules>
        <module>api</module>
        <module>api-adapter</module>
        <module>common</module>
        <module>core</module>
        <module>external</module>
        <module>infra</module>
        <module>starter</module>
    </modules>

</project>
