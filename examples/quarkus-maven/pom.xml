<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.example</groupId>
    <artifactId>halo</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <modules>
        <module>api</module>
        <module>api-adapter</module>
        <module>starter</module>
        <module>core</module>
        <module>common</module>
        <module>infra</module>
    </modules>

    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.15.1</quarkus.platform.version>
        <jandex.version>3.2.2</jandex.version>
        <grpc.version>1.65.1</grpc.version>
        <protobuf.version>3.25.5</protobuf.version>
        <protoc.version>3.25.5</protoc.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.5.0</surefire-plugin.version>
        <lombok.version>1.18.32</lombok.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <hutool.version>5.8.32</hutool.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>


            <!-- use 9.0+ to support virtual thread -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>9.1.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-api-rest</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-api-adapter-grpc</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-api-adapter-rest</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-common</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-core-service</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-core-model</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-core-gateway</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-infra-persistent</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.example</groupId>
                <artifactId>halo-infra-message</artifactId>
                <version>1.0.0</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <!-- pluginManagement can manage version and configuration -->
        <!-- pluginManagement can not manage executions, so do not define executions here -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <!--
                          Generates metadata for reflection on method parameters.
                          Stores formal parameter names of constructors and methods in the generated class file
                          so that the method java.lang.reflect.Executable.getParameters from the Reflection API can retrieve them.
                        -->
                        <parameters>true</parameters>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>${quarkus.platform.group-id}</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.platform.version}</version>
                </plugin>

                <!-- quarkus is build-time CDI, you need include jandex-maven-plugin in every submodule -->
                <plugin>
                    <groupId>io.smallrye</groupId>
                    <artifactId>jandex-maven-plugin</artifactId>
                    <version>${jandex.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <quarkus.http.test-port>8082</quarkus.http.test-port>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <native.image.path>${project.build.directory}/${project.build.finalName}-runner
                            </native.image.path>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>

<!--        <plugins>-->
<!--            &lt;!&ndash; quarkus not have user defined main Application class &ndash;&gt;-->
<!--            &lt;!&ndash; so define quarkus plugin in root, not in starter submodule &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>${quarkus.platform.group-id}</groupId>-->
<!--                <artifactId>quarkus-maven-plugin</artifactId>-->
<!--                <extensions>true</extensions>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                            <goal>generate-code</goal>-->
<!--                            <goal>generate-code-tests</goal>-->
<!--                            <goal>native-image-agent</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>io.smallrye</groupId>-->
<!--                <artifactId>jandex-maven-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>make-index</id>-->
<!--                        <goals>-->
<!--                            <goal>jandex</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
    </build>



</project>
